(() #hash((0 . None) (1 . None) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 0)5((5) #hash((0 . None) (1 . None) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 1)(() #hash((0 . 5) (1 . None) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 2)7((7) #hash((0 . 5) (1 . None) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 3)(() #hash((0 . 5) (1 . 7) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 4)5((5) #hash((0 . 5) (1 . 7) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 5)7((7 5) #hash((0 . 5) (1 . 7) (2 . None) (3 . None) (4 . None)) #hash((0 . 0) (1 . 5) (2 . 7)) #hash() ((LOAD_CONST . 1) (STORE_FAST . 0) (LOAD_CONST . 2) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 20) (LOAD_FAST . 0) (STORE_FAST . 1) (LOAD_FAST . 0) (LOAD_FAST . 1) (COMPARE_OP . 0) (POP_JUMP_IF_FALSE . 36) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_ADD . 0) (STORE_FAST . 2) (LOAD_FAST . 1) (LOAD_FAST . 0) (COMPARE_OP . 4) (POP_JUMP_IF_FALSE . 52) (LOAD_FAST . 0) (LOAD_FAST . 1) (BINARY_SUBTRACT . 0) (STORE_FAST . 3) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 2) (POP_JUMP_IF_FALSE . 68) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_SUBTRACT . 0) (STORE_FAST . 4) (LOAD_FAST . 2) (LOAD_FAST . 3) (COMPARE_OP . 3) (POP_JUMP_IF_FALSE . 84) (LOAD_FAST . 2) (LOAD_FAST . 3) (BINARY_ADD . 0) (STORE_FAST . 4) (LOAD_CONST . 0) (RETURN_VALUE . 0)) 6)